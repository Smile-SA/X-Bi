{"version":3,"sources":["webpack:///./src/components/graphics/card/card.js"],"names":["name","components","apexcharts","VueApexCharts","props","data","timer","value","sparkLine","lstm","methods","lastValue","parseFloat","this","configuration","toFixed","type","general","additionalUrl","queryData","then","r","total","method","results","length","map","item","query_key","reduce","a","b","icon","trend","toLowerCase","$forceUpdate","height","undefined","group","styles","async","options","chart","toString","beforeMount","getData"],"mappings":"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","file":"js/chunk-2d22db66.f885e797.js","sourcesContent":["import * as general from \"../../../controller/genaralController\";\nimport VueApexCharts from 'vue-apexcharts'\n\nexport default {\n    name: \"Card\",\n    components: {\n        apexcharts: VueApexCharts,\n    },\n    props: ['configuration', 'queryData', 'styles', 'additionalUrl', 'group'],\n    data() {\n        return {\n            timer: '',\n            value: '-',\n            sparkLine: {},\n            lstm: {}\n        }\n    },\n    methods: {\n        async getData() {\n            let lastValue = parseFloat(this.configuration.value).toFixed(2) > 0 ? this.configuration.value : 0\n            switch (this.configuration.type) {\n                case\"default\" :\n                case\"multi-icon\":\n                    this.lstm = {}\n                    await general.getJsonData(this.configuration, this.additionalUrl, this.queryData)\n                        .then((r) => {\n                            if (r.total > 0) {\n                                switch (this.configuration.method) {\n                                    case \"avg\":\n                                        this.configuration.value = (r.results.length > 0) ? (r.results.map(item => item[this.configuration.query_key])\n                                            .reduce((a, b) => a + b) / r.results.length).toFixed(2) : lastValue\n                                        break;\n                                    case \"count\":\n                                        this.configuration.value = r.results.length;\n                                        break;\n                                    case \"lstm\":\n                                        this.configuration.value = (r.results[this.configuration.query_key]).toFixed(2)\n                                        this.configuration.icon = 'fa-arrow-' + (r.results.trend).toLowerCase()\n                                        this.lstm = r.results\n                                        break;\n                                    case \"sum\":\n                                        this.configuration.value = (r.results.length <= 1) ?\n                                            parseFloat(r.results[0][this.configuration.query_key]) : (r.results.length > 1) ?\n                                                r.results.map(item => parseFloat(item[this.configuration.query_key])).reduce((a, b) => a + b, 0).toFixed(0) : lastValue\n                                        break;\n                                }\n                                this.$forceUpdate()\n                            } else {\n                                this.configuration.value = lastValue;\n                                this.$forceUpdate();\n                            }\n                        });\n                    break;\n                case \"chart\":\n                    this.sparkLine.height = undefined;\n                    await general.getDataByVariableAndDateToApex(this.configuration, this.additionalUrl, this.queryData, this.group, this.styles,).then(async (r) => {\n                        if (r.total > 0) {\n                            this.sparkLine = r;\n                            this.sparkLine.options.chart.type = \"line\";\n                        }\n                    });\n                    await general.getJsonData(this.configuration, this.additionalUrl, this.queryData).then((r) => {\n                        if (r.total > 0) {\n                            switch (this.configuration.method) {\n                                case \"avg\":\n                                    this.configuration.value = (r.results.length > 0) ? (r.results.map(item => item[this.configuration.query_key])\n                                        .reduce((a, b) => a + b) / r.results.length)\n                                        .toFixed(2) : lastValue\n                                    break;\n                                case \"count\":\n                                    this.configuration.value = r.total;\n                                    break;\n                                case \"lstm\":\n                                    this.configuration.value = (r.results[this.configuration.query_key]).toFixed(2)\n                                    this.configuration.icon = 'fa-arrow-' + (r.results.trend).toLowerCase()\n                                    this.lstm = r.results\n                                    break;\n                                case \"sum\":\n                                    this.configuration.value = (r.results.length < 1) ?\n                                        r.results[0][this.configuration.query_key].toFixed(2) : (r.results.length > 1) ?\n                                            r.results[0].map(item => item[this.configuration.query_key]).reduce((a, b) => a + b, 0).toFixed(2) : lastValue\n                                    break;\n                            }\n                            this.$forceUpdate()\n                        } else {\n                            this.configuration.value = lastValue;\n                            this.$forceUpdate()\n                        }\n                    });\n                    break;\n            }\n            this.configuration.value = (this.configuration.value).toString()\n        },\n    },\n    beforeMount() {\n        this.getData(this.configuration.method);\n    },\n}"],"sourceRoot":""}