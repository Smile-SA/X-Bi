(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0cc2f3"],{"4d9f":function(t,s,e){"use strict";e.r(s);var r=e("73b5"),i=e("492c"),o=e("d5a1");const h=o["apiInfo"];s["default"]={name:"add",components:{},props:["structureType","refreshFunction","id","url"],data(){return{form:[],model:{},showForm:!1,errors:{},message:"",controls:{}}},computed:{lookModel(){return this.model}},methods:{async show(){this.errors={},this.message="",this.form=await this.getForm(),this.showForm=!0,await this.$modal.show("view-add"+this.structureType)},cancel(){this.errors={},this.message="",this.$formulate.reset("add-form"+this.structureType),this.$modal.hide("view-add"+this.structureType),this.showForm=!1,this.deleteDynamicInput()},async getForm(){return await r["getForm"](this.structureType)},async showInput(t){return await r["showInputInModel"](t,this.model)},submitForm(){"static"===h.dataType?(this.$emit("itemAdded",this.model),this.cancel()):(this.errors={},this.message="",i["generalAdd"](this.url,this.model).then(t=>{t.errors?this.errors.submit=!0:(this.deleteDynamicInput(),this.$formulate.reset("add-form"+this.structureType),this.errors.submit=!1),this.refreshFunction(),this.message=t.message}))},deleteDynamicInput(){let t=[];Object.keys(this.form).map(s=>{this.form[s].isDynamic&&!0===this.form[s].isDynamic&&t.push(s)}),this.form.length=this.form.length-t.length},changeForm(t){t.dynamicFields&&(this.deleteDynamicInput(),r["dynamicInputs"](this.form,this.model))}},watch:{lookModel(){r["updateValidation"](this.form,this.model)}},async beforeMount(){}}}}]);
//# sourceMappingURL=chunk-2d0cc2f3.3f2b2a80.js.map