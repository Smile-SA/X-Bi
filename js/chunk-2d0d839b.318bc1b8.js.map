{"version":3,"sources":["webpack:///./src/components/forms/session/add/add.js"],"names":["name","props","data","schema","model","controls","computed","lookModel","this","methods","show","getFormSchema","$modal","structureType","cancel","$formulate","reset","hide","configurationsController","Object","keys","length","showInput","input","submitForm","path","replace","requiresAuth","displayInMenu","structure","viewId","refreshFunction","$router","go","currentRoute","watch"],"mappings":"kHAAA,uBAEe,cACXA,KAAM,MACNC,MAAO,CAAC,gBAAiB,kBAAmB,UAC5CC,OACI,MAAO,CACHC,OAAQ,GACRC,MAAO,GACPC,SAAU,KAGlBC,SAAU,CACNC,YAAc,OAAOC,KAAKJ,QAE9BK,QAAS,CACLC,OACIF,KAAKG,gBACLH,KAAKI,OAAOF,KAAK,WAAaF,KAAKK,gBAEvCC,SACIN,KAAKO,WAAWC,MAAM,WAAYR,KAAKK,eACvCL,KAAKI,OAAOK,KAAK,WAAaT,KAAKK,gBAEvCF,gBACI,IAAIT,EAAOgB,aAAiCV,KAAKK,eAC7CM,OAAOC,KAAKlB,GAAMmB,OAAS,IAC3Bb,KAAKL,OAASD,IAGtBoB,UAAUC,GACN,OAAOL,sBAA0CK,EAAMf,KAAKJ,QAEhEoB,WAAWX,GACe,SAAlBA,IACAL,KAAKJ,MAAMqB,KAAOjB,KAAKJ,MAAMJ,KAAK0B,QAAQ,IAAK,IAC/ClB,KAAKJ,MAAMuB,cAAe,EAC1BnB,KAAKJ,MAAMwB,eAAgB,EAC3BpB,KAAKJ,MAAMyB,UAAY,CACnB,OAAU,CACN,OAAU,GACV,OAAU,IAEd,KAAQ,CACJ,OAAU,GACV,OAAU,IAEd,MAAS,CACL,OAAU,GACV,OAAU,CACN,OAAU,MACV,UAAa,YAKqD,IAA9EX,cAAkCL,EAAeL,KAAKJ,MAAOI,KAAKsB,UAClEtB,KAAKuB,kBACLvB,KAAKO,WAAWC,MAAM,WAAYR,KAAKK,eACnB,SAAjBA,GACCL,KAAKwB,QAAQC,GAAGzB,KAAKwB,QAAQE,iBAK7CC,MAAO,CACH5B,YACIW,sBAA0CV,KAAKL,OAAQK,KAAKJ","file":"js/chunk-2d0d839b.318bc1b8.js","sourcesContent":["import * as configurationsController from \"../../../../controller/configurationsController\";\n\nexport default {\n    name: 'add',\n    props: ['structureType', 'refreshFunction', 'viewId'],\n    data() {\n        return {\n            schema: [],\n            model: {},\n            controls: {},\n        }\n    },\n    computed: {\n        lookModel () {return this.model}\n    },\n    methods: {\n        show() {\n            this.getFormSchema();\n            this.$modal.show('view-add' + this.structureType);\n        },\n        cancel() {\n            this.$formulate.reset('add-form'+ this.structureType)\n            this.$modal.hide('view-add' + this.structureType);\n        },\n        getFormSchema() {\n            let data = configurationsController.getForm(this.structureType);\n            if (Object.keys(data).length > 0) {\n                this.schema = data\n            }\n        },\n        showInput(input) {\n            return configurationsController.showInputInModel(input,this.model);\n        },\n        submitForm(structureType) {\n            if (structureType === 'view') {\n                this.model.path = this.model.name.replace(\" \", \"\")\n                this.model.requiresAuth = true\n                this.model.displayInMenu = true\n                this.model.structure = {\n                    \"select\": {\n                        \"models\": [],\n                        \"styles\": {}\n                    },\n                    \"card\": {\n                        \"models\": [],\n                        \"styles\": {}\n                    },\n                    \"chart\": {\n                        \"models\": [],\n                        \"styles\": {\n                            \"height\": \"500\",\n                            \"font_size\": \"20px\"\n                        }\n                    }\n                }\n            }\n            if (configurationsController.addModel(structureType, this.model, this.viewId) === true) {\n                this.refreshFunction();\n                this.$formulate.reset('add-form'+ this.structureType)\n                if(structureType ==='view'){\n                    this.$router.go(this.$router.currentRoute)\n                }\n            }\n        },\n    },\n    watch: {\n        lookModel() {\n            configurationsController.updateValidation(this.schema, this.model);\n        }\n    },\n}\n\n\n"],"sourceRoot":""}