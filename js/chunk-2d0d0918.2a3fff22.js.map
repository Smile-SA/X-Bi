{"version":3,"sources":["webpack:///./src/components/forms/url/show/show.js"],"names":["apiInfo","uiConfigurations","name","components","props","data","cmValue","cmOption","tabSize","mode","theme","lineNumbers","line","readOnly","computed","mounted","methods","getDate","localStorageData","JSON","parse","localStorage","getItem","this","value","CodeMirror","document","getElementById","setValue","stringify","results","on","cm","e","codemirrorIgnore","general","url","id","dataType","then","r","$modal","show","$nextTick","hide"],"mappings":"gHAAA,+CAIA,MAAMA,EAAUC,aAED,cACbC,KAAM,OACNC,WAAY,GACZC,MAAO,CAAC,MAAM,kBAAkB,KAAK,QAAS,QAC9CC,OACE,MAAO,CACLC,QAAS,GACTC,SAAU,CACRC,QAAS,EACTC,KAAM,kBACNC,MAAO,UACPC,aAAa,EACbC,MAAM,EACNC,SAAU,cAIhBC,SAAU,GAGVC,YAEAC,QAAS,CACPC,UACE,MAAMC,EAAmBC,KAAKC,MAAMC,aAAaC,QAAQ,QAAUC,KAAKlB,KAAKH,OACzEgB,GACFK,KAAKC,MAAQD,KAAKlB,KAAKH,KACvBqB,KAAKjB,QAAUmB,kBAAwBC,SAASC,eAAe,SAAUJ,KAAKhB,UAC9EgB,KAAKjB,QAAQsB,SAAST,KAAKU,UAAUX,EAAiBb,KAAKyB,QAAS,KAAM,IAC1EP,KAAKjB,QAAQyB,GAAG,OAAQ,CAACC,EAAIC,KAC3BA,EAAEC,kBAAmB,KAIvBC,aAAgBZ,KAAKa,IAAKb,KAAKc,GAAId,KAAKC,MAA4B,WAArBxB,EAAQsC,UAAuBC,KAAMC,IAClFjB,KAAKjB,QAAUmB,kBAAwBC,SAASC,eAAe,SAAUJ,KAAKhB,UAC9EgB,KAAKjB,QAAQsB,SAAST,KAAKU,UAAUW,EAAEnC,KAAKyB,QAAS,KAAM,IAC3DP,KAAKjB,QAAQyB,GAAG,OAAQ,CAACC,EAAIC,KAC3BA,EAAEC,kBAAmB,OAK7B,mBACQX,KAAKkB,OAAOC,KAAK,iBAAmBnB,KAAKc,GAAKd,KAAKC,OACzDD,KAAKoB,UAAU,KACbpB,KAAKN,aAGT2B,OACErB,KAAKkB,OAAOG,KAAK,iBAAmBrB,KAAKc,GAAKd,KAAKC","file":"js/chunk-2d0d0918.2a3fff22.js","sourcesContent":["import * as general from \"../../../../controller/generalController\";\nimport * as CodeMirror from \"codemirror\";\nimport * as uiConfigurations from \"@/uiConfigurations.json\";\n\nconst apiInfo = uiConfigurations.apiInfo;\n\nexport default {\n  name: 'show',\n  components: {},\n  props: ['url','refreshFunction','id','value', 'data'],\n  data () {\n    return {\n      cmValue: '',\n      cmOption: {\n        tabSize: 4,\n        mode: 'text/javascript',\n        theme: 'eclipse',\n        lineNumbers: true,\n        line: true,\n        readOnly: 'nocursor'\n      }\n    }\n  },\n  computed: {\n\n  },\n  mounted(){\n  },\n  methods: {\n    getDate(){\n      const localStorageData = JSON.parse(localStorage.getItem('x-bi:' + this.data.name));\n      if (localStorageData) {\n        this.value = this.data.name;\n        this.cmValue = CodeMirror.fromTextArea(document.getElementById(\"value\"), this.cmOption);\n        this.cmValue.setValue(JSON.stringify(localStorageData.data.results, null, 2));\n        this.cmValue.on('copy', (cm, e) => {\n          e.codemirrorIgnore = true;\n        });\n      }\n      else {\n        general.getById(this.url, this.id, this.value, apiInfo.dataType === 'static').then((r) => {\n          this.cmValue = CodeMirror.fromTextArea(document.getElementById(\"value\"), this.cmOption);\n          this.cmValue.setValue(JSON.stringify(r.data.results, null, 2));\n          this.cmValue.on('copy', (cm, e) => {\n            e.codemirrorIgnore = true;\n          });\n        });\n      }\n    },\n    async show() {\n      await this.$modal.show('preview-modal-' + this.id + this.value);\n      this.$nextTick(() => {\n        this.getDate();\n      });\n    },\n    hide() {\n      this.$modal.hide('preview-modal-' + this.id + this.value);\n    },\n  }\n}\n\n\n"],"sourceRoot":""}